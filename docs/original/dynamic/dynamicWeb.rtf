{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf440
{\fonttbl\f0\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9820\viewh11600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Dynamic Web Design\
\
Hello.\
\
Where we are with web design?\
HTML & CSS:\
- building static pages of information with HTML.\
- controlling style and layout with CSS.\
\
Users can submit an http request to the server, which transmits the page back to the browser.\
\
The limitations of these pages:\
- We must manually write each page.\
- Keeping content up to date requires someone going 'under the hood' of the page.\
- There can be little user input to the page.\
\
What other things are we used to being able to do online?\
Media & interaction rich web 2.0 applications like:\
- youtube\
- delicious\
- digg\
- amazon\
- ebay\
- facebook\
\
What features of these pages do we want to be able to implement ourselves?\
What novel or interesting things can we do with these features in combination?\
\
How are all these things achieved?\
Server-side scripting languages (Coldfusion, PHP, etc):\
\
- These pieces of script are interpreted on the server when a page is requested.  The server generates a standard HTML page, and delivers it back to the browser requesting it.\
\
- As the browser only receives HTML from the server, there is no need for users to have any plug-ins or special software installed (the software is installed on the server).  Users are also unable to see the code on the server, only the delivered HTML.\
\
We'll be focusing on Adobe's Coldfusion (CF) language.\
\
\
Databases - information store houses.\
- databases go hand in hand with server side languages, they store the information which is to be converted into HTML and served to a browser.\
- we can read information from  / write information to a database using server side script in conjunction with HTML forms.\
\
\
What can we do with these things?\
\
automatic page generation\
- produce enormous sites (like face book) by only writing the code for five or six pages.\
- Change common elements of a site (like a menu) by changing one file.\
\
dynamic content :\
- able to update pages content without having to go into the code.\
- serve web pages displaying selected content (such as the results of a search).\
- allow user generated content.\
\
art?\
\
Mashups\
- Mashups take advantage of information already available on the internet.\
- Instead of adding new content to the web, they reorganise data to suit particular users.\
\
Existing data sources\
- open apis (amazon, ebay, digg, flickr, delicious)\
- rss feeds\
- \
\
We'll be going into more detail about mashups over the next few weeks:\
- Planning mashups.\
- Using what's already there (in new ways).\
- Using flash in mashups (or mashups in flash).\
\
Wednesday morning tutorials:\
- Tutorials will be every week (bonus classes).\
- The core content of the course will be covered in these Thursday slots,\
but\
- Wednesday morning tutorials will be essential slots for gaining insight into ways of working with information online, as well as for getting some pretty practical help with your group project.\
\
N.B. - After the Alpha submission in week 6, one of the Wednesday morning slots will be structured as an opportunity for groups to meet individually and discuss their project and its proposed furtherance with us.  It is strongly advised that all groups (and all group members) attend.\
\
The brief:\
- Facilitate, promote or subvert the branding process.\
- Purpose and functioning of your brand space website is up to you.\
	must involve:\
		- some particular user activity or task\
		- some intended user community\
		- at least one database\
		- some mechanism for deploying links from an existing social network site\
- Could be a service / a mashup / a page for something conceptual or imaginary / real-world commercial.\
(Remember that you may chose to build the commercial site you design in the Digital Market Place course).\
Remember also that your site may well be multifaceted.  You may wish to display flickr photos on a google map, but this might not in-itself be the purpose of your project.  Perhaps this map is part of a larger commercial site selling local art?\
\
Your project must be original!  Try to be innovative, stylish and clever.\
\
Group work:\
- Working in groups is strongly encouraged.  \
- The production of a complex dynamic site will take a lot of work, and will have suitably varied tasks for a group to allocate specific tasks amongst themselves.\
- All group members must contribute significantly to each submission.\
\
Proposal:\
- To allow groups to begin working towards their alpha prototype with a firm view of their end goal, a proposal should be submitted to me before the end of Week 3.\
- The alpha prototype is due at the end of Week 6, so groups should have started on their project by this time.\
- There will be opportunity to discuss the proposal once it has been submitted to ensure that what is suggested is suitable / manageable, and that all members of the group have a clear idea of their task.\
\
- The final submission (of a beta prototype) is due at the end of week 11.\
- For clarification of the 'alpha' and 'beta' stages of software development, check this wikipedia entry: http://en.wikipedia.org/wiki/Development_stage#Alpha\
\
\
Special interest group:\
If you want to experiment with other dangerous sounding web-technologies like DOM, AJAX, XML, JavaScript and PHP, we can set up a further weekly session to investigate their uses.  This would be on a more informal basis, and would likely go at a faster pace than the set classes.  To some extent, the group would also be student led.\
\
Monday or Friday?}